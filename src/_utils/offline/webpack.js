// @flow

import { resolve } from "path"

import OfflinePlugin from "offline-plugin"

const swFallbackIndexEntry = resolve(__dirname, "sw-fallback-index.js")
const runtimeEntry = resolve(__dirname, "runtime.js")

export const offlinePlugin = (config: PhenomicConfig): Array<Object> => {
  if (!config.offline) {
    console.log("No offline plugin")
    return []
  }

  return [
    new OfflinePlugin({
      publicPath: config.baseUrl.pathname,
      // https://github.com/NekR/offline-plugin/issues/58
      relativePaths: false,

      // Use this option to explicitely cache files not generated by webpack
      externals: [
        "index.html", // generated by phenomic static build, after webpack
      ],

      // every webpack generated assets have hashes, so we can safely
      // inform OfflinePlugin about that
      safeToUseOptionalCaches: true,

      caches: {
        // `main` files will be loaded during SW install
        main: [
          "index.html",
          "phenomic.*",
          // you may add here some crucial assets
          // but prefer the `additional` section
        ],

        // `additional` files are loaded after main section
        // and do not prevent SW to install.
        additional: [
          // cache all pages data
          "*.json",
        ],
        // `optional` files will be cached only when requested
        optional: [
          ":rest:",
        ],
      },
      // for more advanced usage, see documentation of the plugin
      // https://github.com/NekR/offline-plugin/blob/master/docs/caches.md

      // No need for html, json data are enough
      // also don't cache dotfiles and sourcemap files (default values of
      // this plugin)
      excludes: [
        "**/.*",
        "**/*.map",
        "**/*.html",
      ],

      // rewrites: (asset) => {
      //
      //   console.log("sw ASSETS", asset)
      //   // asset =
      //   // asset.replace(/^([\s\S]*?)index.htm(l?)$/, (match, dir) => {
      //   //   return dir || '/';
      //   // });
      //   //
      //   // // Your problem fix
      //   // if (asset !== '/') {
      //   //   return '/static/' + asset;
      //   // }
      //
      //   return asset
      // },

      ServiceWorker: {
        entry: swFallbackIndexEntry,
      },

      // Appcache Fallback for browser that does not support Service Worker
      // (eg: Safari, IE, Edge...)
      Appcache: {
        // Appcache does not offer the ability to cache resources with
        // multiple conditions, so you must explicitely choose section
        // defined above that will be downloaded during appcache
        // install/update
        caches: [
          "main", // cache all crucial files
          "additional", // also cache additional files
          // "optional", // maybe a bit brutal: cache everything
          // obviously, this will depends of the size of your website
        ],
        FALLBACK: {
          "/": "/index.html",
        },
      },

      // For more options, check out the documentation
      // https://www.npmjs.com/package/offline-plugin
      // You can also tweak the runtime part in
      // `scripts/phenomic.browser.js`
    }),
  ]
}

export const offlineEntry = (config: PhenomicConfig): Array<string> => {
  if (!config.offline) {
    console.log("No offline runtime")
    return []
  }

  return [
    runtimeEntry,
  ]
}
