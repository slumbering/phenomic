{"head":{"title":"How to use Collections in Phenomic","incomplete":true,"description":"By default, Phenomic provides 2 things to help you work with collections: it creates a file that contains all page metadata in a uniqueâ€¦"},"body":"<p>By default, Phenomic provides 2 things to help you work with collections:</p>\n<ul>\n<li>it creates a file that contains all page metadata in a unique collection,</li>\n<li>it provides a helper that helps you filter/sort/limit the collection.</li>\n</ul>\n<h2 id=\"collection-file\"><a href=\"#collection-file\" class=\"phenomic-HeadingAnchor\">#</a>Collection file</h2>\n<p>Here is a simple collection example; note that the metadata defines the\nadditional fields <code>__filename</code> &amp; <code>__url</code>.</p>\n<pre><code class=\"hljs language-json\">[\n  {\n    <span class=\"hljs-attr\">\"__filename\"</span>: <span class=\"hljs-string\">\"index.md\"</span>,\n    <span class=\"hljs-attr\">\"__url\"</span>: <span class=\"hljs-string\">\"/\"</span>,\n    <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Awesome Website\"</span>\n  },\n  {\n    <span class=\"hljs-attr\">\"__filename\"</span>: <span class=\"hljs-string\">\"blog/index.md\"</span>,\n    <span class=\"hljs-attr\">\"__url\"</span>: <span class=\"hljs-string\">\"/blog/\"</span>,\n    <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Awesome blog\"</span>\n  },\n  {\n    <span class=\"hljs-attr\">\"__filename\"</span>: <span class=\"hljs-string\">\"blog/halloween.md\"</span>,\n    <span class=\"hljs-attr\">\"__url\"</span>: <span class=\"hljs-string\">\"/blog/halloween/\"</span>,\n    <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Awesome Halloween blog post\"</span>,\n    <span class=\"hljs-attr\">\"layout\"</span>: <span class=\"hljs-string\">\"Post\"</span>,\n    <span class=\"hljs-attr\">\"date\"</span>: <span class=\"hljs-string\">\"2015-10-31\"</span>\n  },\n  {\n    <span class=\"hljs-attr\">\"__filename\"</span>: <span class=\"hljs-string\">\"blog/xmas.md\"</span>,\n    <span class=\"hljs-attr\">\"__url\"</span>: <span class=\"hljs-string\">\"/blog/xmas/\"</span>,\n    <span class=\"hljs-attr\">\"title\"</span>: <span class=\"hljs-string\">\"Awesome Christmas blog post\"</span>,\n    <span class=\"hljs-attr\">\"layout\"</span>: <span class=\"hljs-string\">\"Post\"</span>,\n    <span class=\"hljs-attr\">\"date\"</span>: <span class=\"hljs-string\">\"2015-12-25\"</span>\n  },\n]</code></pre>\n<p>As you can see, this file contains all pages, indexes and posts.</p>\n<p>The easiest way to get some data is to use the Phenomic helper:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// es6</span>\n<span class=\"hljs-keyword\">import</span> enhanceCollection <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"phenomic/lib/enhance-collection\"</span>\n\n<span class=\"hljs-comment\">// es5</span>\n<span class=\"hljs-keyword\">var</span> enhanceCollection = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">\"phenomic/lib/enhance-collection\"</span>).default</code></pre>\n<p>With it, you can easily filter some pages anywhere in your components:</p>\n<pre><code class=\"hljs language-js\">enhanceCollection(collection, {\n  filter: { layout: <span class=\"hljs-string\">\"Post\"</span> },\n  sort: <span class=\"hljs-string\">\"date\"</span>,\n  reverse: <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-comment\">// limit: 1,</span>\n})</code></pre>\n<p>So, where does this collection come from? Here is an example of a component\nthat will display posts, sorted by date, and other pages (that are not a post)\nin a second list. You will see that the collection is retrieved from\n<a href=\"https://facebook.github.io/react/docs/context.html\">the context</a>.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> React, { Component, PropTypes } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>\n\n<span class=\"hljs-keyword\">import</span> Page <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"Page\"</span>\n\n<span class=\"hljs-keyword\">import</span> enhanceCollection <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"phenomic/lib/enhance-collection\"</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Collection</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n\n  <span class=\"hljs-keyword\">static</span> propTypes = {\n    head: PropTypes.object.isRequired,\n    body: PropTypes.string.isRequired,\n  };\n\n  <span class=\"hljs-keyword\">static</span> contextTypes = {\n    collection: PropTypes.array,\n  };\n\n  render() {\n    <span class=\"hljs-keyword\">const</span> {\n      collection,\n    } = <span class=\"hljs-keyword\">this</span>.context\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Page</span> { <span class=\"hljs-attr\">...this.props</span> } /&gt;</span>\n        {\n          Boolean(!collection || !collection.length) &amp;&amp;\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n            { \"No entry\" }\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        }\n        {\n          Boolean(collection &amp;&amp; collection.length) &amp;&amp;\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n            { \"Posts (by date)\" }\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n            {\n              enhanceCollection(collection, {\n                filter: { layout: \"Post\" },\n                sort: \"date\",\n                reverse: true,\n                // limit: 1,\n              })\n              .map((item) =&gt; {\n                return (\n                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{</span> <span class=\"hljs-attr\">item.__url</span> }&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">{</span> <span class=\"hljs-attr\">item.__url</span> }&gt;</span>\n                      { item.title }\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n                  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                )\n              })\n            }\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n\n            { \"Other pages\" }\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n            {\n              enhanceCollection(collection, {\n                filter: ({ layout }) =&gt; layout !== \"Post\",\n                sort: \"title\",\n              })\n              .map((item) =&gt; {\n                return (\n                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{</span> <span class=\"hljs-attr\">item.__url</span> }&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">{</span> <span class=\"hljs-attr\">item.__url</span> }&gt;</span>\n                      { item.title }\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n                  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n                )\n              })\n            }\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        }\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    )\n  }\n}</span></code></pre>\n","rawBody":"\nBy default, Phenomic provides 2 things to help you work with collections:\n\n- it creates a file that contains all page metadata in a unique collection,\n- it provides a helper that helps you filter/sort/limit the collection.\n\n## Collection file\n\nHere is a simple collection example; note that the metadata defines the\nadditional fields `__filename` & `__url`.\n\n```json\n[\n  {\n    \"__filename\": \"index.md\",\n    \"__url\": \"/\",\n    \"title\": \"Awesome Website\"\n  },\n  {\n    \"__filename\": \"blog/index.md\",\n    \"__url\": \"/blog/\",\n    \"title\": \"Awesome blog\"\n  },\n  {\n    \"__filename\": \"blog/halloween.md\",\n    \"__url\": \"/blog/halloween/\",\n    \"title\": \"Awesome Halloween blog post\",\n    \"layout\": \"Post\",\n    \"date\": \"2015-10-31\"\n  },\n  {\n    \"__filename\": \"blog/xmas.md\",\n    \"__url\": \"/blog/xmas/\",\n    \"title\": \"Awesome Christmas blog post\",\n    \"layout\": \"Post\",\n    \"date\": \"2015-12-25\"\n  },\n]\n```\n\nAs you can see, this file contains all pages, indexes and posts.\n\nThe easiest way to get some data is to use the Phenomic helper:\n\n```js\n// es6\nimport enhanceCollection from \"phenomic/lib/enhance-collection\"\n\n// es5\nvar enhanceCollection = require(\"phenomic/lib/enhance-collection\").default\n```\n\nWith it, you can easily filter some pages anywhere in your components:\n\n```js\nenhanceCollection(collection, {\n  filter: { layout: \"Post\" },\n  sort: \"date\",\n  reverse: true,\n  // limit: 1,\n})\n```\n\nSo, where does this collection come from? Here is an example of a component\nthat will display posts, sorted by date, and other pages (that are not a post)\nin a second list. You will see that the collection is retrieved from\n[the context](https://facebook.github.io/react/docs/context.html).\n\n```js\nimport React, { Component, PropTypes } from \"react\"\n\nimport Page from \"Page\"\n\nimport enhanceCollection from \"phenomic/lib/enhance-collection\"\n\nexport default class Collection extends Component {\n\n  static propTypes = {\n    head: PropTypes.object.isRequired,\n    body: PropTypes.string.isRequired,\n  };\n\n  static contextTypes = {\n    collection: PropTypes.array,\n  };\n\n  render() {\n    const {\n      collection,\n    } = this.context\n    return (\n      <div>\n        <Page { ...this.props } />\n        {\n          Boolean(!collection || !collection.length) &&\n          <div>\n            { \"No entry\" }\n          </div>\n        }\n        {\n          Boolean(collection && collection.length) &&\n          <div>\n            { \"Posts (by date)\" }\n            <ul>\n            {\n              enhanceCollection(collection, {\n                filter: { layout: \"Post\" },\n                sort: \"date\",\n                reverse: true,\n                // limit: 1,\n              })\n              .map((item) => {\n                return (\n                  <li key={ item.__url }>\n                    <a href={ item.__url }>\n                      { item.title }\n                    </a>\n                  </li>\n                )\n              })\n            }\n            </ul>\n\n            { \"Other pages\" }\n            <ul>\n            {\n              enhanceCollection(collection, {\n                filter: ({ layout }) => layout !== \"Post\",\n                sort: \"title\",\n              })\n              .map((item) => {\n                return (\n                  <li key={ item.__url }>\n                    <a href={ item.__url }>\n                      { item.title }\n                    </a>\n                  </li>\n                )\n              })\n            }\n            </ul>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n```\n","raw":"---\ntitle: How to use Collections in Phenomic\nincomplete: true\n---\n\nBy default, Phenomic provides 2 things to help you work with collections:\n\n- it creates a file that contains all page metadata in a unique collection,\n- it provides a helper that helps you filter/sort/limit the collection.\n\n## Collection file\n\nHere is a simple collection example; note that the metadata defines the\nadditional fields `__filename` & `__url`.\n\n```json\n[\n  {\n    \"__filename\": \"index.md\",\n    \"__url\": \"/\",\n    \"title\": \"Awesome Website\"\n  },\n  {\n    \"__filename\": \"blog/index.md\",\n    \"__url\": \"/blog/\",\n    \"title\": \"Awesome blog\"\n  },\n  {\n    \"__filename\": \"blog/halloween.md\",\n    \"__url\": \"/blog/halloween/\",\n    \"title\": \"Awesome Halloween blog post\",\n    \"layout\": \"Post\",\n    \"date\": \"2015-10-31\"\n  },\n  {\n    \"__filename\": \"blog/xmas.md\",\n    \"__url\": \"/blog/xmas/\",\n    \"title\": \"Awesome Christmas blog post\",\n    \"layout\": \"Post\",\n    \"date\": \"2015-12-25\"\n  },\n]\n```\n\nAs you can see, this file contains all pages, indexes and posts.\n\nThe easiest way to get some data is to use the Phenomic helper:\n\n```js\n// es6\nimport enhanceCollection from \"phenomic/lib/enhance-collection\"\n\n// es5\nvar enhanceCollection = require(\"phenomic/lib/enhance-collection\").default\n```\n\nWith it, you can easily filter some pages anywhere in your components:\n\n```js\nenhanceCollection(collection, {\n  filter: { layout: \"Post\" },\n  sort: \"date\",\n  reverse: true,\n  // limit: 1,\n})\n```\n\nSo, where does this collection come from? Here is an example of a component\nthat will display posts, sorted by date, and other pages (that are not a post)\nin a second list. You will see that the collection is retrieved from\n[the context](https://facebook.github.io/react/docs/context.html).\n\n```js\nimport React, { Component, PropTypes } from \"react\"\n\nimport Page from \"Page\"\n\nimport enhanceCollection from \"phenomic/lib/enhance-collection\"\n\nexport default class Collection extends Component {\n\n  static propTypes = {\n    head: PropTypes.object.isRequired,\n    body: PropTypes.string.isRequired,\n  };\n\n  static contextTypes = {\n    collection: PropTypes.array,\n  };\n\n  render() {\n    const {\n      collection,\n    } = this.context\n    return (\n      <div>\n        <Page { ...this.props } />\n        {\n          Boolean(!collection || !collection.length) &&\n          <div>\n            { \"No entry\" }\n          </div>\n        }\n        {\n          Boolean(collection && collection.length) &&\n          <div>\n            { \"Posts (by date)\" }\n            <ul>\n            {\n              enhanceCollection(collection, {\n                filter: { layout: \"Post\" },\n                sort: \"date\",\n                reverse: true,\n                // limit: 1,\n              })\n              .map((item) => {\n                return (\n                  <li key={ item.__url }>\n                    <a href={ item.__url }>\n                      { item.title }\n                    </a>\n                  </li>\n                )\n              })\n            }\n            </ul>\n\n            { \"Other pages\" }\n            <ul>\n            {\n              enhanceCollection(collection, {\n                filter: ({ layout }) => layout !== \"Post\",\n                sort: \"title\",\n              })\n              .map((item) => {\n                return (\n                  <li key={ item.__url }>\n                    <a href={ item.__url }>\n                      { item.title }\n                    </a>\n                  </li>\n                )\n              })\n            }\n            </ul>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n```\n","__filename":"docs/usage/collections.md","__url":"/docs/usage/collections/","__resourceUrl":"/docs/usage/collections/index.html","__dataUrl":"/docs/usage/collections/index.html.4a16dca50be8ef5cf982ef1ab80b84e9.json"}