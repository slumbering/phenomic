{"head":{"title":"How to use generate feeds in Phenomic","incomplete":true,"description":"The phenomic/lib/content-loader can handle this very easily. The default boilerplate already handles a default RSS feed that will grab theâ€¦"},"body":"<p>The <code>phenomic/lib/content-loader</code> can handle this very easily.\nThe default boilerplate already handles a default RSS feed that will grab the\nlast 20 posts.</p>\n<p>Here is a commented part of the webpack configuration that will helps:</p>\n<pre><code class=\"hljs language-js\">  <span class=\"hljs-built_in\">module</span>: {\n   loaders: [\n     { <span class=\"hljs-comment\">// phenomic requirement</span>\n       test: <span class=\"hljs-regexp\">/\\.md$/</span>,\n       loader: <span class=\"hljs-string\">\"phenomic/lib/content-loader\"</span>,\n       query: {\n         context: path.join(config.cwd, config.source),\n\n         <span class=\"hljs-comment\">// here you define generic metadata for your feed</span>\n         feedsOptions: {\n           title: pkg.name,\n           site_url: pkg.homepage,\n         },\n         feeds: {\n           <span class=\"hljs-comment\">// here we define one feed, but you can generate multiple, based</span>\n           <span class=\"hljs-comment\">// on different filters</span>\n           <span class=\"hljs-string\">\"feed.xml\"</span>: {\n             collectionOptions: {\n               filter: { layout: <span class=\"hljs-string\">\"Post\"</span> },\n               sort: <span class=\"hljs-string\">\"date\"</span>,\n               reverse: <span class=\"hljs-literal\">true</span>,\n               limit: <span class=\"hljs-number\">20</span>,\n             },\n           },\n         },\n       },\n     },\n  ...</code></pre>\n","rawBody":"\nThe `phenomic/lib/content-loader` can handle this very easily.\nThe default boilerplate already handles a default RSS feed that will grab the\nlast 20 posts.\n\nHere is a commented part of the webpack configuration that will helps:\n\n```js\n  module: {\n   loaders: [\n     { // phenomic requirement\n       test: /\\.md$/,\n       loader: \"phenomic/lib/content-loader\",\n       query: {\n         context: path.join(config.cwd, config.source),\n\n         // here you define generic metadata for your feed\n         feedsOptions: {\n           title: pkg.name,\n           site_url: pkg.homepage,\n         },\n         feeds: {\n           // here we define one feed, but you can generate multiple, based\n           // on different filters\n           \"feed.xml\": {\n             collectionOptions: {\n               filter: { layout: \"Post\" },\n               sort: \"date\",\n               reverse: true,\n               limit: 20,\n             },\n           },\n         },\n       },\n     },\n  ...\n```\n","raw":"---\ntitle: How to use generate feeds in Phenomic\nincomplete: true\n---\n\nThe `phenomic/lib/content-loader` can handle this very easily.\nThe default boilerplate already handles a default RSS feed that will grab the\nlast 20 posts.\n\nHere is a commented part of the webpack configuration that will helps:\n\n```js\n  module: {\n   loaders: [\n     { // phenomic requirement\n       test: /\\.md$/,\n       loader: \"phenomic/lib/content-loader\",\n       query: {\n         context: path.join(config.cwd, config.source),\n\n         // here you define generic metadata for your feed\n         feedsOptions: {\n           title: pkg.name,\n           site_url: pkg.homepage,\n         },\n         feeds: {\n           // here we define one feed, but you can generate multiple, based\n           // on different filters\n           \"feed.xml\": {\n             collectionOptions: {\n               filter: { layout: \"Post\" },\n               sort: \"date\",\n               reverse: true,\n               limit: 20,\n             },\n           },\n         },\n       },\n     },\n  ...\n```\n","__filename":"docs/usage/feeds.md","__url":"/docs/usage/feeds/","__resourceUrl":"/docs/usage/feeds/index.html","__dataUrl":"/docs/usage/feeds/index.html.a8924080c3f423d35b87464a03ff4733.json"}